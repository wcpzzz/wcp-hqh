<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mybatislearn.dao.ThingandlocationMapper" >
  <resultMap id="BaseResultMap" type="com.mybatislearn.dao.model.Thingandlocation" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="thing_id" property="thingId" jdbcType="INTEGER" />
    <result column="location_id" property="locationId" jdbcType="INTEGER" />
    <result column="creater" property="creater" jdbcType="VARCHAR" />
    <result column="master" property="master" jdbcType="VARCHAR" />
    <result column="modi_time" property="modiTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, thing_id, location_id, creater, master, modi_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mybatislearn.dao.model.ThingandlocationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from thingandlocation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from thingandlocation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from thingandlocation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mybatislearn.dao.model.ThingandlocationExample" >
    delete from thingandlocation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mybatislearn.dao.model.Thingandlocation" >
    insert into thingandlocation (id, thing_id, location_id,
      creater, master, modi_time
      )
    values (#{id,jdbcType=INTEGER}, #{thingId,jdbcType=INTEGER}, #{locationId,jdbcType=INTEGER},
      #{creater,jdbcType=VARCHAR}, #{master,jdbcType=VARCHAR}, #{modiTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mybatislearn.dao.model.Thingandlocation" >
    insert into thingandlocation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="thingId != null" >
        thing_id,
      </if>
      <if test="locationId != null" >
        location_id,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="master != null" >
        master,
      </if>
      <if test="modiTime != null" >
        modi_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="thingId != null" >
        #{thingId,jdbcType=INTEGER},
      </if>
      <if test="locationId != null" >
        #{locationId,jdbcType=INTEGER},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="master != null" >
        #{master,jdbcType=VARCHAR},
      </if>
      <if test="modiTime != null" >
        #{modiTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mybatislearn.dao.model.ThingandlocationExample" resultType="java.lang.Integer" >
    select count(*) from thingandlocation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update thingandlocation
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.thingId != null" >
        thing_id = #{record.thingId,jdbcType=INTEGER},
      </if>
      <if test="record.locationId != null" >
        location_id = #{record.locationId,jdbcType=INTEGER},
      </if>
      <if test="record.creater != null" >
        creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.master != null" >
        master = #{record.master,jdbcType=VARCHAR},
      </if>
      <if test="record.modiTime != null" >
        modi_time = #{record.modiTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update thingandlocation
    set id = #{record.id,jdbcType=INTEGER},
      thing_id = #{record.thingId,jdbcType=INTEGER},
      location_id = #{record.locationId,jdbcType=INTEGER},
      creater = #{record.creater,jdbcType=VARCHAR},
      master = #{record.master,jdbcType=VARCHAR},
      modi_time = #{record.modiTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mybatislearn.dao.model.Thingandlocation" >
    update thingandlocation
    <set >
      <if test="thingId != null" >
        thing_id = #{thingId,jdbcType=INTEGER},
      </if>
      <if test="locationId != null" >
        location_id = #{locationId,jdbcType=INTEGER},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="master != null" >
        master = #{master,jdbcType=VARCHAR},
      </if>
      <if test="modiTime != null" >
        modi_time = #{modiTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mybatislearn.dao.model.Thingandlocation" >
    update thingandlocation
    set thing_id = #{thingId,jdbcType=INTEGER},
      location_id = #{locationId,jdbcType=INTEGER},
      creater = #{creater,jdbcType=VARCHAR},
      master = #{master,jdbcType=VARCHAR},
      modi_time = #{modiTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
